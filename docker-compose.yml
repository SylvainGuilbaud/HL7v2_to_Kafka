services:
  iris:
    environment:
      - SAMPLE_TOKEN=${SAMPLE_TOKEN}
      - TZ=Europe/Paris
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    command: --check-caps false --ISCAgent false
    hostname: ${IRIS_CONTAINER_NAME}
    ports:
      - 1972
      - 18888:52773
      - 53773
      - 19000:19000
      - 19001:19001
    volumes:
      - ./:/home/irisowner/dev/
      - ./data:/data
      - ./notebook/Notebooks:/Notebooks

  # zookeeper:
  #   image: 'confluentinc/cp-zookeeper:5.3.1-1'
  #   # image: arm64v8/zookeeper:latest
  #   # image: confluentinc/cp-zookeeper
  #   hostname: 'zookeeper'
  #   ports:
  #     - 2181:2181
  #   environment:
  #     - 'ZOOKEEPER_CLIENT_PORT=2181'
  #     - 'ZOOKEEPER_TICK_TIME=2000'
  #   restart: 'on-failure'

  # kafka:
    # image: 'confluentinc/cp-kafka:5.3.1-1'
    # image: wurstmeister/kafka:latest
    # image: confluentinc/cp-kafka
    # hostname: 'kafka'
    # depends_on:
    #   - 'zookeeper'
#     ports:
#       - 9092:9092
# #      - 9999:9999
#     environment:
#       - 'KAFKA_BROKER_ID=1'
#       - 'KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181'
#       - 'KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092'
#       - 'KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
#       - 'KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT'
#       - 'KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1'
#       - 'KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1'
#       - 'KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1'
#       - 'KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094'
# #     - 'KAFKA_JMX_OPTS=-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.net.preferIPv4Stack=true -Dcom.sun.management.jmxremote.port=9999 -Dcom.sun.management.jmxremote.rmi.port=9999 -Djava.rmi.server.hostname=ip here'
#     restart: 'on-failure'

  # kafka-manager:
  #   image: 'eduard93/kafka-manager-demo:latest'
  #   # image: hlebalbau/kafka-manager:latest
  #   # image: gdp123gd/kafka-manager:v2.0.0.2
  #   hostname: 'kafka-manager'
  #   depends_on:
  #     - 'kafka'
  #   environment:
  #     - 'KAFKA_SERVERS_URL=kafka:29092'
  #   ports:
  #     - 8082:8082
  #   restart: 'on-failure'
  # notebook:
  #   build: 
  #     context: notebook
  #     dockerfile: dockerfile
  #   ports:
  #     - "28888:8888"
  #   volumes:
  #     - ./notebook/Notebooks:/Notebooks
  #   command: "start-notebook.sh --NotebookApp.token='' --NotebookApp.password='' --notebook-dir=/Notebooks"